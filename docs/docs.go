// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2021-07-25 10:56:44.009932 +0800 CST m=+0.051377137

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "651019063@qq.com"
        },
        "license": {
            "name": "menghuanwd",
            "url": "https://www.gin-api.com/"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/merchant/categories": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "后台 分类"
                ],
                "summary": "列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "名称",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/vos.Category"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "后台 分类"
                ],
                "summary": "创建",
                "parameters": [
                    {
                        "description": "新增分类",
                        "name": "category_model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/params.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vos.Category"
                        }
                    }
                }
            }
        },
        "/merchant/categories/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "后台 分类"
                ],
                "summary": "详细",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vos.Category"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "后台 分类"
                ],
                "summary": "更新",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "更新分类",
                        "name": "category_model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/params.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vos.Category"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "后台 分类"
                ],
                "summary": "删除",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/wechat/categories": {
            "get": {
                "description": "所有分类列表-分页",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "小程序 分类"
                ],
                "summary": "列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "名称",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/vos.Category"
                            }
                        }
                    }
                }
            }
        },
        "/wechat/users": {
            "post": {
                "description": "登录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "小程序 用户"
                ],
                "summary": "登录",
                "parameters": [
                    {
                        "description": "微信Code",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/params.WechatUserCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vos.User"
                        }
                    }
                }
            }
        },
        "/wechat/users/grant": {
            "post": {
                "description": "授权",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "小程序 用户"
                ],
                "summary": "授权拿去用户信息",
                "parameters": [
                    {
                        "description": "微信授权",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/params.WechatUserGrantParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vos.User"
                        }
                    }
                }
            }
        },
        "/wechat/users/me": {
            "get": {
                "description": "我",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "小程序 用户"
                ],
                "summary": "我",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vos.User"
                        }
                    }
                }
            }
        },
        "/wechat/users/wxacodeunlimit": {
            "post": {
                "description": "小程序码",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "小程序 用户"
                ],
                "summary": "生成微信小程序码",
                "parameters": [
                    {
                        "description": "微信小程序码",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/params.CodeUnlimitParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vos.User"
                        }
                    }
                }
            }
        },
        "/wechat/users/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "小程序 用户"
                ],
                "summary": "更新",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "更新",
                        "name": "user_model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/params.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vos.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "params.Category": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "params.CodeUnlimitParams": {
            "type": "object",
            "required": [
                "appid",
                "scene"
            ],
            "properties": {
                "appid": {
                    "type": "string"
                },
                "scene": {
                    "type": "string"
                }
            }
        },
        "params.User": {
            "type": "object",
            "properties": {
                "auth_token": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "birthday": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "params.WechatUserCode": {
            "type": "object",
            "required": [
                "appid",
                "code"
            ],
            "properties": {
                "appid": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "params.WechatUserGrantParams": {
            "type": "object",
            "required": [
                "appid",
                "encryptedData",
                "iv",
                "open_id"
            ],
            "properties": {
                "appid": {
                    "type": "string"
                },
                "encryptedData": {
                    "type": "string"
                },
                "iv": {
                    "type": "string"
                },
                "open_id": {
                    "type": "string"
                }
            }
        },
        "vos.Category": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "shop_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "vos.User": {
            "type": "object",
            "properties": {
                "auth_token": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "birthday": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "mini_open_id": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "session_key": {
                    "type": "string"
                },
                "shop_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "union_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "wxa_wechat_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "2.0",
	Host:        "api.gin-api.com",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "gin-api API",
	Description: "接口文档",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
